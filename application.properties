# NOTE: The deployment will be organized in such a way, that this file will determine where all the modules should
# be deployed (of course, for microservices [except local deployment] this means multiple machines, and for the bus
# it will be only one machine) - hosts and ports separately(as they will be built locally on these machines by the
# CI system and then run as JARs with the prescribed port number). These will be copied to a .properties file in
# the bus module, so that the bus will know where it can expect the microservices to run. During startup it will inspect
# them and report (to a log?) whether they are in fact running or not. The bus will provide load balancing and failover
# for the The bus needs to be deployed as the last module.
#
# At the same time, this file will contain the address of the bus (host and port separately) and the mappings it assigns
# to proxied  These will be copied to .properties files in the submodules, allowing them to access the
# services on the bus instead of direct access.
#
# This file will vary, depending on the environment (and therefore, the branch in VCS) enabling CI to deploy in different
# configuration on each. The local version will only deploy to localhost on different ports.

#integration.bus.url=http://localhost:9090
integration.bus.server.host=localhost
integration.bus.server.port=9080

integration.bus.course.tracker=CourseTracker
integration.bus.events=Events
integration.bus.network=Network
integration.bus.planner=Planner
integration.bus.search=Search
integration.bus.users=Users

integration.bus.throw.exception.on.failure=false

search.server.host=localhost
search.server.port=9000

planner.server.host=localhost
planner.server.port=8000

course.tracker.server.host=localhost
course.tracker.server.port=8020

events.server.host=localhost
events.server.port=8040

network.server.host=localhost
network.server.port=8060

users.server.host=localhost
users.server.port=8080